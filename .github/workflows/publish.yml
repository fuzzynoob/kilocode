name: Release Extension
on:
    workflow_dispatch:

env:
    GIT_REF: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || 'main' }}
    NODE_VERSION: 20.19.2
    PNPM_VERSION: 10.8.1

jobs:
    release-extension:
        runs-on: ubuntu-latest
        permissions:
            contents: write # Required for pushing tags.
        if: >
            github.event_name == 'workflow_dispatch'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  ref: ${{ env.GIT_REF }}
            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "pnpm"
            - name: Install dependencies
              run: pnpm install
            - name: Configure Git
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
            - name: Package Extension
              run: |
                  current_package_version=$(node -p "require('./src/package.json').version")
                  pnpm vsix:production

                  # Save VSIX contents to a temporary file to avoid broken pipe issues.
                  unzip -l bin/kilo-code-${current_package_version}.vsix > /tmp/kilo-code-vsix-contents.txt

                  # Check for required files.
                  grep -q "extension/package.json" /tmp/kilo-code-vsix-contents.txt || exit 1
                  grep -q "extension/package.nls.json" /tmp/kilo-code-vsix-contents.txt || exit 1
                  grep -q "extension/dist/extension.js" /tmp/kilo-code-vsix-contents.txt || exit 1
                  grep -q "extension/webview-ui/audio/celebration.wav" /tmp/kilo-code-vsix-contents.txt || exit 1
                  grep -q "extension/webview-ui/build/assets/index.js" /tmp/kilo-code-vsix-contents.txt || exit 1
                  grep -q "extension/assets/codicons/codicon.ttf" /tmp/kilo-code-vsix-contents.txt || exit 1
                  grep -q "extension/assets/vscode-material-icons/icons/3d.svg" /tmp/kilo-code-vsix-contents.txt || exit 1

                  # Clean up temporary file.
                  rm /tmp/kilo-code-vsix-contents.txt
            - name: Create and Push Git Tag
              run: |
                  current_package_version=$(node -p "require('./src/package.json').version")
                  git tag -a "v${current_package_version}" -m "Release v${current_package_version}"
                  git push origin "v${current_package_version}" --no-verify
                  echo "Successfully created and pushed git tag v${current_package_version}"
            - name: Create GitHub Release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  current_package_version=$(node -p "require('./src/package.json').version")

                  # don't annoy contributors with a fork release
                  changelog_content="Release v${current_package_version}"

                  # Create release with changelog content
                  gh release create "v${current_package_version}" \
                    --title "Release v${current_package_version}" \
                    --notes "$changelog_content" \
                    --target ${{ env.GIT_REF }} \
                    bin/kilo-code-${current_package_version}.vsix
                  echo "Successfully created GitHub Release v${current_package_version}"
